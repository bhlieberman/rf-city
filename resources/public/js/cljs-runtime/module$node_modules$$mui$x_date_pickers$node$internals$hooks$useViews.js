shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$hooks$useViews=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.useViews=function({onChange,onViewChange,openTo,view:inView,views,autoFocus,focusedView:inFocusedView,onFocusedViewChange}){warnedOnceNotValidView||(null==inView||views.includes(inView)||(console.warn(`MUI: \`view="${inView}"\` is not a valid prop.`,`It must be an element of \`views=["${views.join('", "')}"]\`.`),warnedOnceNotValidView=!0),null!=inView||null==openTo||views.includes(openTo)||(console.warn(`MUI: \`openTo="${openTo}"\` is not a valid prop.`,
`It must be an element of \`views=["${views.join('", "')}"]\`.`),warnedOnceNotValidView=!0));const previousOpenTo=React.useRef(openTo),previousViews=React.useRef(views),defaultView=React.useRef(views.includes(openTo)?openTo:views[0]),[view,setView]=(0,_utils.unstable_useControlled)({name:"useViews",state:"view",controlled:inView,default:defaultView.current});inView=React.useRef(autoFocus?view:null);const [focusedView,setFocusedView]=(0,_utils.unstable_useControlled)({name:"useViews",state:"focusedView",
controlled:inFocusedView,default:inView.current});React.useEffect(()=>{(previousOpenTo.current&&previousOpenTo.current!==openTo||previousViews.current&&previousViews.current.some(previousView=>!views.includes(previousView)))&&setView(views.includes(openTo)?openTo:views[0])},[openTo,setView,view,views]);inView=views.indexOf(view);inFocusedView=views[inView-1]??null;const nextView=views[inView+1]??null,handleChangeView=(0,_useEventCallback.default)(newView=>{setView(newView);onViewChange&&onViewChange(newView)}),
goToNextView=(0,_useEventCallback.default)(()=>{nextView&&handleChangeView(nextView)});inView=(0,_useEventCallback.default)((value,currentViewSelectionState)=>{const isSelectionFinishedOnCurrentView="finish"===currentViewSelectionState;onChange(value,isSelectionFinishedOnCurrentView&&nextView?"partial":currentViewSelectionState);isSelectionFinishedOnCurrentView&&goToNextView()});autoFocus=(0,_useEventCallback.default)((viewToFocus,hasFocus)=>{hasFocus?setFocusedView(viewToFocus):setFocusedView(prevFocusedView=>
viewToFocus===prevFocusedView?null:prevFocusedView);onFocusedViewChange?.(viewToFocus,hasFocus)});return{view,setView:handleChangeView,focusedView,setFocusedView:autoFocus,nextView,previousView:inFocusedView,defaultView:defaultView.current,goToNextView,setValueAndGoToNextView:inView}};var React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&
nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),
_useEventCallback=global(require("module$node_modules$$mui$utils$useEventCallback")),_utils=require("module$node_modules$$mui$utils$index");let warnedOnceNotValidView=!1}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$hooks$useViews.js.map
