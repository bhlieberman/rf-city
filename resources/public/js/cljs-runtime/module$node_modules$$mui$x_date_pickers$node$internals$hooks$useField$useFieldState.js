shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldState=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.useFieldState=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,
key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),_useControlled=global(require("module$node_modules$$mui$utils$useControlled")),_styles=require("module$node_modules$$mui$material$node$styles$index"),
_useUtils=require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useUtils"),_useField=require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useField_utils");exports.useFieldState=params=>{const utils=(0,_useUtils.useUtils)(),localeText=(0,_useUtils.useLocaleText)(),adapter=(0,_useUtils.useLocalizationContext)(),isRTL="rtl"===(0,_styles.useTheme)().direction,{valueManager,fieldValueManager,valueType,validator,internalProps,internalProps:{value:valueProp,defaultValue,
onChange,format,formatDensity="dense",selectedSections:selectedSectionsProp,onSelectedSectionsChange}}=params;params=React.useRef(defaultValue);const valueFromTheOutside=valueProp??params.current??valueManager.emptyValue,sectionsValueBoundaries=React.useMemo(()=>(0,_useField.getSectionsBoundaries)(utils),[utils]),getSectionsFromValue=React.useCallback((value,fallbackSections=null)=>fieldValueManager.getSectionsFromValue(utils,value,fallbackSections,isRTL,date=>(0,_useField.splitFormatIntoSections)(utils,
localeText,format,date,formatDensity)),[fieldValueManager,format,localeText,isRTL,utils,formatDensity]);params=React.useMemo(()=>fieldValueManager.getValueStrFromSections(getSectionsFromValue(valueManager.emptyValue),isRTL),[fieldValueManager,getSectionsFromValue,valueManager.emptyValue,isRTL]);const [state,setState]=React.useState(()=>{const sections=getSectionsFromValue(valueFromTheOutside);(0,_useField.validateSections)(sections,valueType);return{sections,value:valueFromTheOutside,referenceValue:fieldValueManager.updateReferenceValue(utils,
valueFromTheOutside,valueManager.getTodayValue(utils,valueType)),tempValueStrAndroid:null}}),[selectedSections,innerSetSelectedSections]=(0,_useControlled.default)({controlled:selectedSectionsProp,default:null,name:"useField",state:"selectedSectionIndexes"}),setSelectedSections=newSelectedSections=>{innerSetSelectedSections(newSelectedSections);onSelectedSectionsChange?.(newSelectedSections);setState(prevState=>(0,_extends2.default)({},prevState,{selectedSectionQuery:null}))},selectedSectionIndexes=
React.useMemo(()=>{if(null==selectedSections)return null;if("all"===selectedSections)return{startIndex:0,endIndex:state.sections.length-1,shouldSelectBoundarySelectors:!0};if("number"===typeof selectedSections)return{startIndex:selectedSections,endIndex:selectedSections};if("string"===typeof selectedSections){const selectedSectionIndex=state.sections.findIndex(section=>section.type===selectedSections);return{startIndex:selectedSectionIndex,endIndex:selectedSectionIndex}}return selectedSections},[selectedSections,
state.sections]),publishValue=({value,referenceValue,sections})=>{setState(prevState=>(0,_extends2.default)({},prevState,{sections,value,referenceValue,tempValueStrAndroid:null}));if(onChange){const context={validationError:validator({adapter,value,props:(0,_extends2.default)({},internalProps,{value})})};onChange(value,context)}},setSectionValue=(sectionIndex,newSectionValue)=>{const newSections=[...state.sections];newSections[sectionIndex]=(0,_extends2.default)({},newSections[sectionIndex],{value:newSectionValue,
modified:!0});return(0,_useField.addPositionPropertiesToSections)(newSections,isRTL)};React.useEffect(()=>{valueManager.areValuesEqual(utils,state.value,valueFromTheOutside)||setState(prevState=>(0,_extends2.default)({},prevState,{value:valueFromTheOutside,referenceValue:fieldValueManager.updateReferenceValue(utils,valueFromTheOutside,prevState.referenceValue),sections:getSectionsFromValue(valueFromTheOutside)}))},[valueFromTheOutside]);React.useEffect(()=>{const sections=getSectionsFromValue(state.value);
(0,_useField.validateSections)(sections,valueType);setState(prevState=>(0,_extends2.default)({},prevState,{sections}))},[format,utils.locale]);return{state,selectedSectionIndexes,setSelectedSections,clearValue:()=>{valueManager.areValuesEqual(utils,state.value,valueManager.emptyValue)||publishValue({value:valueManager.emptyValue,referenceValue:state.referenceValue,sections:getSectionsFromValue(valueManager.emptyValue)})},clearActiveSection:()=>{if(null!=selectedSectionIndexes){var activeSection=state.sections[selectedSectionIndexes.startIndex];
if(""!==activeSection.value){activeSection=fieldValueManager.getActiveDateManager(utils,state,activeSection);var isTheOnlyNonEmptySection=1===activeSection.getSections(state.sections).filter(section=>""!==section.value).length,newSections=setSectionValue(selectedSectionIndexes.startIndex,"");isTheOnlyNonEmptySection=isTheOnlyNonEmptySection?null:utils.date(new Date(""));var newValues=activeSection.getNewValuesFromNewActiveDate(isTheOnlyNonEmptySection);(null!=isTheOnlyNonEmptySection&&!utils.isValid(isTheOnlyNonEmptySection))!==
(null!=activeSection.date&&!utils.isValid(activeSection.date))?publishValue((0,_extends2.default)({},newValues,{sections:newSections})):setState(prevState=>(0,_extends2.default)({},prevState,newValues,{sections:newSections,tempValueStrAndroid:null}))}}},updateSectionValue:({activeSection,newSectionValue,shouldGoToNextSection})=>{shouldGoToNextSection&&selectedSectionIndexes&&selectedSectionIndexes.startIndex<state.sections.length-1?setSelectedSections(selectedSectionIndexes.startIndex+1):selectedSectionIndexes&&
selectedSectionIndexes.startIndex!==selectedSectionIndexes.endIndex&&setSelectedSections(selectedSectionIndexes.startIndex);activeSection=fieldValueManager.getActiveDateManager(utils,state,activeSection);newSectionValue=setSectionValue(selectedSectionIndexes.startIndex,newSectionValue);var newActiveDateSections=activeSection.getSections(newSectionValue);let newActiveDate=(0,_useField.getDateFromDateSections)(utils,newActiveDateSections);shouldGoToNextSection=!1;if(!utils.isValid(newActiveDate)){const clampedSections=
(0,_useField.clampDaySectionIfPossible)(utils,newActiveDateSections,sectionsValueBoundaries);null!=clampedSections&&(shouldGoToNextSection=!0,newActiveDate=(0,_useField.getDateFromDateSections)(utils,clampedSections))}let values;null!=newActiveDate&&utils.isValid(newActiveDate)?(newActiveDateSections=(0,_useField.mergeDateIntoReferenceDate)(utils,newActiveDate,newActiveDateSections,activeSection.referenceDate,!0),values=activeSection.getNewValuesFromNewActiveDate(newActiveDateSections),activeSection=
!0):(values=activeSection.getNewValuesFromNewActiveDate(newActiveDate),activeSection=(null!=newActiveDate&&!utils.isValid(newActiveDate))!==(null!=activeSection.date&&!utils.isValid(activeSection.date)));const sections=shouldGoToNextSection?getSectionsFromValue(values.value,state.sections):newSectionValue;return activeSection?publishValue((0,_extends2.default)({},values,{sections})):setState(prevState=>(0,_extends2.default)({},prevState,values,{sections,tempValueStrAndroid:null}))},updateValueFromValueStr:valueStr=>
{valueStr=fieldValueManager.parseValueStr(valueStr,state.referenceValue,(dateStr,referenceDate)=>{dateStr=utils.parse(dateStr,format);if(null==dateStr||!utils.isValid(dateStr))return null;const sections=(0,_useField.splitFormatIntoSections)(utils,localeText,format,dateStr,formatDensity);return(0,_useField.mergeDateIntoReferenceDate)(utils,dateStr,sections,referenceDate,!1)});const newReferenceValue=fieldValueManager.updateReferenceValue(utils,valueStr,state.referenceValue);publishValue({value:valueStr,
referenceValue:newReferenceValue,sections:getSectionsFromValue(valueStr,state.sections)})},setTempAndroidValueStr:tempValueStrAndroid=>setState(prev=>(0,_extends2.default)({},prev,{tempValueStrAndroid})),sectionsValueBoundaries,placeholder:params}}}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldState.js.map
