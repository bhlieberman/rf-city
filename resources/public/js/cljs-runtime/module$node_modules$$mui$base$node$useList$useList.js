shadow$provide.module$node_modules$$mui$base$node$useList$useList=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==
key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),_utils=require("module$node_modules$$mui$utils$index"),_listActions=require("module$node_modules$$mui$base$node$useList$listActions_types"),_listReducer=global(require("module$node_modules$$mui$base$node$useList$listReducer")),
_useListChangeNotifiers=global(require("module$node_modules$$mui$base$node$useList$useListChangeNotifiers")),_useControllableReducer=global(require("module$node_modules$$mui$base$node$utils$useControllableReducer")),_areArraysEqual=global(require("module$node_modules$$mui$base$node$utils$areArraysEqual")),_useLatest=global(require("module$node_modules$$mui$base$node$utils$useLatest")),_useTextNavigation=global(require("module$node_modules$$mui$base$node$utils$useTextNavigation"));const EMPTY_OBJECT=
{},NOOP=()=>{},defaultItemComparer=(optionA,optionB)=>optionA===optionB,defaultIsItemDisabled=()=>!1,defaultItemStringifier=item=>"string"===typeof item?item:String(item),defaultGetInitialState=()=>({highlightedValue:null,selectedValues:[]});exports.default=function(params){const {controlledProps=EMPTY_OBJECT,disabledItemsFocusable=!1,disableListWrap=!1,focusManagement="activeDescendant",getInitialState=defaultGetInitialState,getItemDomElement,getItemId,isItemDisabled=defaultIsItemDisabled,listRef:externalListRef,
onStateChange=NOOP,items,itemComparer=defaultItemComparer,itemStringifier=defaultItemStringifier,onChange,onHighlightChange,orientation="vertical",pageSize=5,reducerActionContext=EMPTY_OBJECT,selectionMode="single",stateReducer:externalReducer}=params;if("DOM"===focusManagement&&null==getItemDomElement)throw Error("useList: The `getItemDomElement` prop is required when using the `DOM` focus management.");if("activeDescendant"===focusManagement&&null==getItemId)throw Error("useList: The `getItemId` prop is required when using the `activeDescendant` focus management.");
const listRef=React.useRef(null),handleRef=(0,_utils.unstable_useForkRef)(externalListRef,listRef),handleHighlightChange=React.useCallback((event,value,reason)=>{null==onHighlightChange?void 0:onHighlightChange(event,value,reason);if("DOM"===focusManagement&&null!=value&&(reason===_listActions.ListActionTypes.itemClick||reason===_listActions.ListActionTypes.keyDown||reason===_listActions.ListActionTypes.textNavigation)){var _getItemDomElement;null==getItemDomElement?void 0:null==(_getItemDomElement=
getItemDomElement(value))?void 0:_getItemDomElement.focus()}},[getItemDomElement,onHighlightChange,focusManagement]),stateComparers=React.useMemo(()=>({highlightedValue:itemComparer,selectedValues:(valuesArray1,valuesArray2)=>(0,_areArraysEqual.default)(valuesArray1,valuesArray2,itemComparer)}),[itemComparer]);params=React.useCallback((event,field,value,reason,state)=>{null==onStateChange?void 0:onStateChange(event,field,value,reason,state);switch(field){case "highlightedValue":handleHighlightChange(event,
value,reason);break;case "selectedValues":null==onChange?void 0:onChange(event,value,reason)}},[handleHighlightChange,onChange,onStateChange]);const listActionContext=React.useMemo(()=>({disabledItemsFocusable,disableListWrap,focusManagement,isItemDisabled,itemComparer,items,itemStringifier,onHighlightChange:handleHighlightChange,orientation,pageSize,selectionMode,stateComparers}),[disabledItemsFocusable,disableListWrap,focusManagement,isItemDisabled,itemComparer,items,itemStringifier,handleHighlightChange,
orientation,pageSize,selectionMode,stateComparers]),initialState=getInitialState(),reducer=null!=externalReducer?externalReducer:_listReducer.default,actionContext=React.useMemo(()=>(0,_extends2.default)({},reducerActionContext,listActionContext),[reducerActionContext,listActionContext]),[state$jscomp$0,dispatch]=(0,_useControllableReducer.default)({reducer,actionContext,initialState,controlledProps,stateComparers,onStateChange:params}),{highlightedValue,selectedValues}=state$jscomp$0,handleTextNavigation=
(0,_useTextNavigation.default)((searchString,event)=>dispatch({type:_listActions.ListActionTypes.textNavigation,event,searchString})),latestSelectedValues=(0,_useLatest.default)(selectedValues),latestHighlightedValue=(0,_useLatest.default)(highlightedValue),previousItems=React.useRef([]);React.useEffect(()=>{(0,_areArraysEqual.default)(previousItems.current,items,itemComparer)||(dispatch({type:_listActions.ListActionTypes.itemsChange,event:null,items,previousItems:previousItems.current}),previousItems.current=
items)},[items,itemComparer,dispatch]);const {notifySelectionChanged,notifyHighlightChanged,registerHighlightChangeHandler,registerSelectionChangeHandler}=(0,_useListChangeNotifiers.default)();React.useEffect(()=>{notifySelectionChanged(selectedValues)},[selectedValues,notifySelectionChanged]);React.useEffect(()=>{notifyHighlightChanged(highlightedValue)},[highlightedValue,notifyHighlightChanged]);const createHandleKeyDown=other=>event=>{var _other$onKeyDown;null==(_other$onKeyDown=other.onKeyDown)?
void 0:_other$onKeyDown.call(other,event);event.defaultPrevented||(_other$onKeyDown=["Home","End","PageUp","PageDown"],"vertical"===orientation?_other$onKeyDown.push("ArrowUp","ArrowDown"):_other$onKeyDown.push("ArrowLeft","ArrowRight"),"activeDescendant"===focusManagement&&_other$onKeyDown.push(" ","Enter"),_other$onKeyDown.includes(event.key)&&event.preventDefault(),dispatch({type:_listActions.ListActionTypes.keyDown,key:event.key,event}),handleTextNavigation(event))},createHandleBlur=other=>event=>
{var _other$onBlur,_listRef$current;null==(_other$onBlur=other.onBlur)?void 0:_other$onBlur.call(other,event);event.defaultPrevented||null!=(_listRef$current=listRef.current)&&_listRef$current.contains(event.relatedTarget)||dispatch({type:_listActions.ListActionTypes.blur,event})},getItemState=React.useCallback(item=>{var _latestSelectedValues;const index=items.findIndex(i=>itemComparer(i,item)),selected=(null!=(_latestSelectedValues=latestSelectedValues.current)?_latestSelectedValues:[]).some(value=>
null!=value&&itemComparer(item,value));_latestSelectedValues=isItemDisabled(item,index);const highlighted=null!=latestHighlightedValue.current&&itemComparer(item,latestHighlightedValue.current);return{disabled:_latestSelectedValues,focusable:"DOM"===focusManagement,highlighted,index,selected}},[items,isItemDisabled,itemComparer,latestSelectedValues,latestHighlightedValue,focusManagement]);params=React.useMemo(()=>({dispatch,getItemState,registerHighlightChangeHandler,registerSelectionChangeHandler}),
[dispatch,getItemState,registerHighlightChangeHandler,registerSelectionChangeHandler]);React.useDebugValue({state:state$jscomp$0});return{contextValue:params,dispatch,getRootProps:(otherHandlers={})=>(0,_extends2.default)({},otherHandlers,{"aria-activedescendant":"activeDescendant"===focusManagement&&null!=highlightedValue?getItemId(highlightedValue):void 0,onBlur:createHandleBlur(otherHandlers),onKeyDown:createHandleKeyDown(otherHandlers),tabIndex:"DOM"===focusManagement?-1:0,ref:handleRef}),state:state$jscomp$0}}}
//# sourceMappingURL=module$node_modules$$mui$base$node$useList$useList.js.map
