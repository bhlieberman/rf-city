shadow$provide.module$node_modules$$mui$x_date_pickers$node$LocalizationProvider$LocalizationProvider=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function LocalizationProvider(inProps){const {localeText:inLocaleText}=
inProps;inProps=(0,_objectWithoutPropertiesLoose2.default)(inProps,_excluded);const {utils:parentUtils,localeText:parentLocaleText}=React.useContext(MuiPickersAdapterContext)??{utils:void 0,localeText:void 0};inProps=(0,_styles.useThemeProps)({props:inProps,name:"MuiLocalizationProvider"});const {children,dateAdapter:DateAdapter,dateFormats,dateLibInstance,adapterLocale,localeText:themeLocaleText}=inProps,localeText=React.useMemo(()=>(0,_extends2.default)({},themeLocaleText,parentLocaleText,inLocaleText),
[themeLocaleText,parentLocaleText,inLocaleText]),utils=React.useMemo(()=>{if(!DateAdapter)return parentUtils?parentUtils:null;const adapter=new DateAdapter({locale:adapterLocale,formats:dateFormats,instance:dateLibInstance});if(!adapter.isMUIAdapter)throw Error("MUI: The date adapter should be imported from `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`, not from `@date-io`\nFor example, `import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'` instead of `import AdapterDayjs from '@date-io/dayjs'`\nMore information on the installation documentation: https://mui.com/x/react-date-pickers/getting-started/#installation");
return adapter},[DateAdapter,adapterLocale,dateFormats,dateLibInstance,parentUtils]),defaultDates=React.useMemo(()=>utils?{minDate:utils.date("1900-01-01T00:00:00.000"),maxDate:utils.date("2099-12-31T00:00:00.000")}:null,[utils]);inProps=React.useMemo(()=>({utils,defaultDates,localeText}),[defaultDates,utils,localeText]);return(0,_jsxRuntime.jsx)(MuiPickersAdapterContext.Provider,{value:inProps,children})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.LocalizationProvider=LocalizationProvider;exports.MuiPickersAdapterContext=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&
nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index"));
global=global(require("module$node_modules$prop_types$index"));var _styles=require("module$node_modules$$mui$material$node$styles$index"),_jsxRuntime=require("module$node_modules$react$jsx_runtime");const _excluded=["localeText"],MuiPickersAdapterContext=React.createContext(null);exports.MuiPickersAdapterContext=MuiPickersAdapterContext;MuiPickersAdapterContext.displayName="MuiPickersAdapterContext";LocalizationProvider.propTypes={adapterLocale:global.default.oneOfType([global.default.object,global.default.string]),
children:global.default.node,dateAdapter:global.default.func,dateFormats:global.default.shape({dayOfMonth:global.default.string,fullDate:global.default.string,fullDateTime:global.default.string,fullDateTime12h:global.default.string,fullDateTime24h:global.default.string,fullDateWithWeekday:global.default.string,fullTime:global.default.string,fullTime12h:global.default.string,fullTime24h:global.default.string,hours12h:global.default.string,hours24h:global.default.string,keyboardDate:global.default.string,
keyboardDateTime:global.default.string,keyboardDateTime12h:global.default.string,keyboardDateTime24h:global.default.string,minutes:global.default.string,month:global.default.string,monthAndDate:global.default.string,monthAndYear:global.default.string,monthShort:global.default.string,normalDate:global.default.string,normalDateWithWeekday:global.default.string,seconds:global.default.string,shortDate:global.default.string,weekday:global.default.string,weekdayShort:global.default.string,year:global.default.string}),
dateLibInstance:global.default.any,localeText:global.default.object}}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$LocalizationProvider$LocalizationProvider.js.map
