shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$utils$time_utils=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.isTimeView=exports.getSecondsInDay=exports.getMeridiem=exports.createIsAfterIgnoreDatePart=exports.convertValueToMeridiem=exports.convertToMeridiem=void 0;exports.isTimeView=view=>["hours","minutes","seconds"].includes(view);exports.getMeridiem=(date,utils)=>date?12<=utils.getHours(date)?"pm":"am":null;const convertValueToMeridiem=
(value,meridiem,ampm)=>ampm&&(12<=value?"pm":"am")!==meridiem?"am"===meridiem?value-12:value+12:value;exports.convertValueToMeridiem=convertValueToMeridiem;exports.convertToMeridiem=(time,meridiem,ampm,utils)=>{meridiem=convertValueToMeridiem(utils.getHours(time),meridiem,ampm);return utils.setHours(time,meridiem)};const getSecondsInDay=(date,utils)=>3600*utils.getHours(date)+60*utils.getMinutes(date)+utils.getSeconds(date);exports.getSecondsInDay=getSecondsInDay;exports.createIsAfterIgnoreDatePart=
(disableIgnoringDatePartForTimeValidation,utils)=>(dateLeft,dateRight)=>disableIgnoringDatePartForTimeValidation?utils.isAfter(dateLeft,dateRight):getSecondsInDay(dateLeft,utils)>getSecondsInDay(dateRight,utils)}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$utils$time_utils.js.map
