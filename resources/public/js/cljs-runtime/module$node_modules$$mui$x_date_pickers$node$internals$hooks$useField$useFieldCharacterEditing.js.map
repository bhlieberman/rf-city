{
"version":3,
"file":"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldCharacterEditing.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@mui/x-date-pickers/node/internals/hooks/useField/useFieldCharacterEditing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$x_date_pickers$node$internals$hooks$useField$useFieldCharacterEditing\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFieldCharacterEditing = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useUtils = require(\"../useUtils\");\nvar _useField = require(\"./useField.utils\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/**\n * The letter editing and the numeric editing each define a `CharacterEditingApplier`.\n * This function decides what the new section value should be and if the focus should switch to the next section.\n *\n * If it returns `null`, then the section value is not updated and the focus does not move.\n */\n\n/**\n * Function called by `applyQuery` which decides:\n * - what is the new section value ?\n * - should the query used to get this value be stored for the next key press ?\n *\n * If it returns `{ sectionValue: string; shouldGoToNextSection: boolean }`,\n * Then we store the query and update the section with the new value.\n *\n * If it returns `{ saveQuery: true` },\n * Then we store the query and don't update the section.\n *\n * If it returns `{ saveQuery: false },\n * Then we do nothing.\n */\n\nconst QUERY_LIFE_DURATION_MS = 5000;\nconst isQueryResponseWithoutValue = response => response.saveQuery != null;\n\n/**\n * Update the active section value when the user pressed a key that is not a navigation key (arrow key for example).\n * This hook has two main editing behaviors\n *\n * 1. The numeric editing when the user presses a digit\n * 2. The letter editing when the user presses another key\n */\nconst useFieldCharacterEditing = ({\n  sections,\n  updateSectionValue,\n  sectionsValueBoundaries,\n  setTempAndroidValueStr\n}) => {\n  const utils = (0, _useUtils.useUtils)();\n  const [query, setQuery] = React.useState(null);\n  const resetQuery = (0, _useEventCallback.default)(() => setQuery(null));\n  React.useEffect(() => {\n    if (query != null && sections[query.sectionIndex]?.type !== query.sectionType) {\n      resetQuery();\n    }\n  }, [sections, query, resetQuery]);\n  React.useEffect(() => {\n    if (query != null) {\n      const timeout = setTimeout(() => resetQuery(), QUERY_LIFE_DURATION_MS);\n      return () => {\n        window.clearTimeout(timeout);\n      };\n    }\n    return () => {};\n  }, [query, resetQuery]);\n  const applyQuery = ({\n    keyPressed,\n    sectionIndex\n  }, getFirstSectionValueMatchingWithQuery, isValidQueryValue) => {\n    const cleanKeyPressed = keyPressed.toLowerCase();\n    const activeSection = sections[sectionIndex];\n\n    // The current query targets the section being editing\n    // We can try to concatenated value\n    if (query != null && (!isValidQueryValue || isValidQueryValue(query.value)) && query.sectionIndex === sectionIndex) {\n      const concatenatedQueryValue = `${query.value}${cleanKeyPressed}`;\n      const queryResponse = getFirstSectionValueMatchingWithQuery(concatenatedQueryValue, activeSection);\n      if (!isQueryResponseWithoutValue(queryResponse)) {\n        setQuery({\n          sectionIndex,\n          value: concatenatedQueryValue,\n          sectionType: activeSection.type\n        });\n        return queryResponse;\n      }\n    }\n    const queryResponse = getFirstSectionValueMatchingWithQuery(cleanKeyPressed, activeSection);\n    if (isQueryResponseWithoutValue(queryResponse) && !queryResponse.saveQuery) {\n      resetQuery();\n      return null;\n    }\n    setQuery({\n      sectionIndex,\n      value: cleanKeyPressed,\n      sectionType: activeSection.type\n    });\n    if (isQueryResponseWithoutValue(queryResponse)) {\n      return null;\n    }\n    return queryResponse;\n  };\n  const applyLetterEditing = params => {\n    const findMatchingOptions = (format, options, queryValue) => {\n      const matchingValues = options.filter(option => option.toLowerCase().startsWith(queryValue));\n      if (matchingValues.length === 0) {\n        return {\n          saveQuery: false\n        };\n      }\n      return {\n        sectionValue: matchingValues[0],\n        shouldGoToNextSection: matchingValues.length === 1\n      };\n    };\n    const testQueryOnFormatAndFallbackFormat = (queryValue, activeSection, fallbackFormat, formatFallbackValue) => {\n      const getOptions = format => (0, _useField.getLetterEditingOptions)(utils, activeSection.type, format);\n      if (activeSection.contentType === 'letter') {\n        return findMatchingOptions(activeSection.format, getOptions(activeSection.format), queryValue);\n      }\n\n      // When editing a digit-format month / weekDay and the user presses a letter,\n      // We can support the letter editing by using the letter-format month / weekDay and re-formatting the result.\n      // We just have to make sure that the default month / weekDay format is a letter format,\n      if (fallbackFormat && formatFallbackValue != null && (0, _useField.getDateSectionConfigFromFormatToken)(utils, fallbackFormat).contentType === 'letter') {\n        const fallbackOptions = getOptions(fallbackFormat);\n        const response = findMatchingOptions(fallbackFormat, fallbackOptions, queryValue);\n        if (isQueryResponseWithoutValue(response)) {\n          return {\n            saveQuery: false\n          };\n        }\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formatFallbackValue(response.sectionValue, fallbackOptions)\n        });\n      }\n      return {\n        saveQuery: false\n      };\n    };\n    const getFirstSectionValueMatchingWithQuery = (queryValue, activeSection) => {\n      switch (activeSection.type) {\n        case 'month':\n          {\n            const formatFallbackValue = fallbackValue => (0, _useField.changeSectionValueFormat)(utils, fallbackValue, utils.formats.month, activeSection.format);\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection, utils.formats.month, formatFallbackValue);\n          }\n        case 'weekDay':\n          {\n            const formatFallbackValue = (fallbackValue, fallbackOptions) => fallbackOptions.indexOf(fallbackValue).toString();\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection, utils.formats.weekday, formatFallbackValue);\n          }\n        case 'meridiem':\n          {\n            return testQueryOnFormatAndFallbackFormat(queryValue, activeSection);\n          }\n        default:\n          {\n            return {\n              saveQuery: false\n            };\n          }\n      }\n    };\n    return applyQuery(params, getFirstSectionValueMatchingWithQuery);\n  };\n  const applyNumericEditing = params => {\n    const getNewSectionValue = (queryValue, sectionType, format, hasLeadingZeros, contentType) => {\n      const queryValueNumber = Number(`${queryValue}`);\n      const sectionBoundaries = sectionsValueBoundaries[sectionType]({\n        currentDate: null,\n        format,\n        contentType\n      });\n      if (queryValueNumber > sectionBoundaries.maximum) {\n        return {\n          saveQuery: false\n        };\n      }\n\n      // If the user types `0` on a month section,\n      // It is below the minimum, but we want to store the `0` in the query,\n      // So that when he pressed `1`, it will store `01` and move to the next section.\n      if (queryValueNumber < sectionBoundaries.minimum) {\n        return {\n          saveQuery: true\n        };\n      }\n      const shouldGoToNextSection = Number(`${queryValue}0`) > sectionBoundaries.maximum || queryValue.length === sectionBoundaries.maximum.toString().length;\n      const newSectionValue = (0, _useField.cleanDigitSectionValue)(utils, queryValueNumber, sectionType, format, hasLeadingZeros, sectionBoundaries);\n      return {\n        sectionValue: newSectionValue,\n        shouldGoToNextSection\n      };\n    };\n    const getFirstSectionValueMatchingWithQuery = (queryValue, activeSection) => {\n      if (activeSection.contentType === 'digit') {\n        return getNewSectionValue(queryValue, activeSection.type, activeSection.format, activeSection.hasLeadingZeros, activeSection.contentType);\n      }\n\n      // When editing a letter-format month and the user presses a digit,\n      // We can support the numeric editing by using the digit-format month and re-formatting the result.\n      if (activeSection.type === 'month') {\n        const response = getNewSectionValue(queryValue, activeSection.type, 'MM', (0, _useField.doesSectionHaveLeadingZeros)(utils, 'digit', 'month', 'MM'), 'digit');\n        if (isQueryResponseWithoutValue(response)) {\n          return response;\n        }\n        const formattedValue = (0, _useField.changeSectionValueFormat)(utils, response.sectionValue, 'MM', activeSection.format);\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formattedValue\n        });\n      }\n\n      // When editing a letter-format weekDay and the user presses a digit,\n      // We can support the numeric editing by returning the nth day in the week day array.\n      if (activeSection.type === 'weekDay') {\n        const response = getNewSectionValue(queryValue, activeSection.type, activeSection.format, activeSection.hasLeadingZeros, activeSection.contentType);\n        if (isQueryResponseWithoutValue(response)) {\n          return response;\n        }\n        const formattedValue = (0, _useField.getDaysInWeekStr)(utils, activeSection.format)[Number(response.sectionValue) - 1];\n        return (0, _extends2.default)({}, response, {\n          sectionValue: formattedValue\n        });\n      }\n      return {\n        saveQuery: false\n      };\n    };\n    return applyQuery(params, getFirstSectionValueMatchingWithQuery, queryValue => !Number.isNaN(Number(queryValue)));\n  };\n  const applyCharacterEditing = (0, _useEventCallback.default)(params => {\n    const activeSection = sections[params.sectionIndex];\n    const isNumericEditing = !Number.isNaN(Number(params.keyPressed));\n    const response = isNumericEditing ? applyNumericEditing(params) : applyLetterEditing(params);\n    if (response == null) {\n      setTempAndroidValueStr(null);\n    } else {\n      updateSectionValue({\n        activeSection,\n        newSectionValue: response.sectionValue,\n        shouldGoToNextSection: response.shouldGoToNextSection\n      });\n    }\n  });\n  return {\n    applyCharacterEditing,\n    resetCharacterQuery: resetQuery\n  };\n};\nexports.useFieldCharacterEditing = useFieldCharacterEditing;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","Object","defineProperty","value","useFieldCharacterEditing","_extends2","React","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_useEventCallback","_useUtils","_useField","sections","updateSectionValue","sectionsValueBoundaries","setTempAndroidValueStr","utils","useUtils","query","setQuery","useState","resetQuery","useEffect","sectionIndex","type","sectionType","timeout","setTimeout","QUERY_LIFE_DURATION_MS","window","clearTimeout","applyQuery","keyPressed","getFirstSectionValueMatchingWithQuery","isValidQueryValue","cleanKeyPressed","toLowerCase","activeSection","concatenatedQueryValue","queryResponse","saveQuery","applyLetterEditing","params","findMatchingOptions","format","options","queryValue","matchingValues","filter","option","startsWith","length","sectionValue","shouldGoToNextSection","testQueryOnFormatAndFallbackFormat","fallbackFormat","formatFallbackValue","contentType","getLetterEditingOptions","getDateSectionConfigFromFormatToken","fallbackOptions","response","formats","month","fallbackValue","changeSectionValueFormat","weekday","indexOf","toString","applyNumericEditing","getNewSectionValue","hasLeadingZeros","queryValueNumber","Number","sectionBoundaries","currentDate","maximum","minimum","newSectionValue","cleanDigitSectionValue","doesSectionHaveLeadingZeros","formattedValue","getDaysInWeekStr","isNaN","applyCharacterEditing","isNumericEditing","resetCharacterQuery"]
}
