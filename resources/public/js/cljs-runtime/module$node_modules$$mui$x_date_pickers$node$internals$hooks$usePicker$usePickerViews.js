shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$hooks$usePicker$usePickerViews=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.usePickerViews=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&
nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),
_useEnhancedEffect=global(require("module$node_modules$$mui$utils$useEnhancedEffect")),_useEventCallback=global(require("module$node_modules$$mui$utils$useEventCallback")),_useViews=require("module$node_modules$$mui$x_date_pickers$node$internals$hooks$useViews"),_timeUtils=require("module$node_modules$$mui$x_date_pickers$node$internals$utils$time_utils");const _excluded=["className","sx"];exports.usePickerViews=({props,propsFromPickerValue,additionalViewProps,inputRef,autoFocusView})=>{const {onChange,
open,onSelectedSectionsChange,onClose}=propsFromPickerValue,{views,openTo,onViewChange,disableOpenPicker,viewRenderers}=props,propsToForwardToView=(0,_objectWithoutPropertiesLoose2.default)(props,_excluded),{view,setView,defaultView,focusedView,setFocusedView,setValueAndGoToNextView}=(0,_useViews.useViews)({view:void 0,views,openTo,onChange,onViewChange,autoFocus:autoFocusView}),{hasUIView,viewModeLookup}=React.useMemo(()=>views.reduce((acc,viewForReduce)=>{let viewMode;viewMode=disableOpenPicker?
"field":null!=viewRenderers[viewForReduce]?"UI":"field";acc.viewModeLookup[viewForReduce]=viewMode;"UI"===viewMode&&(acc.hasUIView=!0);return acc},{hasUIView:!1,viewModeLookup:{}}),[disableOpenPicker,viewRenderers,views]),hasMultipleUITimeView=React.useMemo(()=>1<views.reduce((acc,viewForReduce)=>null!=viewRenderers[viewForReduce]&&(0,_timeUtils.isTimeView)(viewForReduce)?acc+1:acc,0),[viewRenderers,views]),currentViewMode=viewModeLookup[view];props=(0,_useEventCallback.default)(()=>"UI"===currentViewMode);
const [popperView,setPopperView]=React.useState("UI"===currentViewMode?view:null);popperView!==view&&"UI"===viewModeLookup[view]&&setPopperView(view);(0,_useEnhancedEffect.default)(()=>{"field"===currentViewMode&&open&&(onClose(),onSelectedSectionsChange("hours"),setTimeout(()=>{inputRef?.current.focus()}))},[view]);(0,_useEnhancedEffect.default)(()=>{if(open){var newView=view;"field"===currentViewMode&&null!=popperView&&(newView=popperView);newView!==defaultView&&"UI"===viewModeLookup[newView]&&
"UI"===viewModeLookup[defaultView]&&(newView=defaultView);newView!==view&&setView(newView);setFocusedView(newView,!0)}},[open]);return{hasUIView,shouldRestoreFocus:props,layoutProps:{views,view:popperView,onViewChange:setView},renderCurrentView:()=>{if(null==popperView)return null;const renderer=viewRenderers[popperView];return null==renderer?null:renderer((0,_extends2.default)({},propsToForwardToView,additionalViewProps,propsFromPickerValue,{views,onChange:setValueAndGoToNextView,view:popperView,
onViewChange:setView,focusedView,onFocusedViewChange:setFocusedView,showViewSwitcher:hasMultipleUITimeView}))}}}}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$hooks$usePicker$usePickerViews.js.map
