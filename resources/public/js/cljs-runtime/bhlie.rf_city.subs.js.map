{"version":3,"sources":["bhlie/rf_city/subs.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","p1__32811#","cljs.core.get_in","cljs.core/first","p__32812","map__32813","cljs.core/--destructure-map","cljs.core.get","lat","lon","p1__32814#","p1__32815#","p1__32816#","p1__32817#","iter__5523__auto__","s__32819","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__32821","cljs.core/chunk-buffer","i__32820","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__32818","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","movie","cljs.core/select-keys","p1__32822#","p__32823","vec__32824","cljs.core.nth","movies","sort-key","_","cljs.core.sort_by","cljs.core.keyword","p1__32827#","p__32828","map__32829","cljs.core/chunk-first"],"sourcesContent":["(ns bhlie.rf-city.subs\n  (:require [re-frame.core :as re-frame :refer [reg-sub]]))\n\n(reg-sub\n :geo/static-map\n :-> :map)\n\n(reg-sub\n :geo/city-info\n :=> #(get-in % [:data :api :geo]))\n\n(reg-sub\n :geo/city-top-match\n :<- [:geo/city-info]\n :=> first)\n\n(reg-sub\n :geo/live-map-coords\n :<- [:geo/city-top-match]\n :=> (fn [{:keys [lat lon]}] {:lat lat :lon lon}))\n\n#_(reg-sub\n :geo/city-others-match\n :<- [:geo/city-info]\n :=> rest)\n\n(reg-sub\n :geo/map-error \n :=> #(get-in % [:errors :api :geo]))\n\n(reg-sub\n :geo/weather-data\n :=> #(get-in % [:data :api :weather]))\n\n(reg-sub\n :city/movie-data\n :=> #(get-in % [:data :api :movies]))\n\n(reg-sub\n :movies/basic-info\n :<- [:city/movie-data]\n :=> #(for [movie (:results %)]\n        (select-keys movie [:title :release_date :popularity])))\n\n(reg-sub\n :app/current-route\n :-> :current-route)\n\n(reg-sub\n :app/movies.sort-key\n :=> #(get-in % [:sort :movies]))\n\n(reg-sub\n :movies/sorted\n :<- [:movies/basic-info]\n :<- [:app/movies.sort-key]\n (fn [[movies sort-key] _] (if (some? sort-key) (sort-by (keyword sort-key) movies) movies)))\n\n (reg-sub\n :config/current-location\n :=> #(get % :current-loc))\n\n(reg-sub\n :app/current-location\n :<- [:config/current-location]\n :=> (fn [{:keys [lat lon]}] (str \"Latitude: \" lat \" Longitude: \" lon)))\n\n(reg-sub\n :app/goog-map\n :-> :goog-map)"]}