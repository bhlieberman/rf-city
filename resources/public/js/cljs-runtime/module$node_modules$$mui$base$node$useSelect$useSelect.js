shadow$provide.module$node_modules$$mui$base$node$useSelect$useSelect=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==
key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),_utils=require("module$node_modules$$mui$utils$index"),_useButton=global(require("module$node_modules$$mui$base$node$useButton$index")),_useSelect=require("module$node_modules$$mui$base$node$useSelect$useSelect_types"),
_useList=global(require("module$node_modules$$mui$base$node$useList$index")),_defaultOptionStringifier=global(require("module$node_modules$$mui$base$node$useSelect$defaultOptionStringifier")),_useCompound=require("module$node_modules$$mui$base$node$utils$useCompound"),_selectReducer=global(require("module$node_modules$$mui$base$node$useSelect$selectReducer"));exports.default=function(props){const {buttonRef:buttonRefProp,defaultOpen=!1,defaultValue:defaultValueProp,disabled=!1,listboxId:listboxIdProp,
listboxRef:listboxRefProp,multiple=!1,onChange,onHighlightChange,onOpenChange,open:openProp,options:optionsParam,optionStringifier=_defaultOptionStringifier.default,value:valueProp}=props,buttonRef=React.useRef(null);var handleButtonRef=(0,_utils.unstable_useForkRef)(buttonRefProp,buttonRef);const listboxRef=React.useRef(null),listboxId=(0,_utils.unstable_useId)(listboxIdProp);let defaultValue;void 0===valueProp&&void 0===defaultValueProp?defaultValue=[]:void 0!==defaultValueProp&&(defaultValue=multiple?
defaultValueProp:[defaultValueProp]);const value=React.useMemo(()=>{if(void 0!==valueProp)return multiple?valueProp:[valueProp]},[valueProp,multiple]),{subitems,contextValue:compoundComponentContextValue}=(0,_useCompound.useCompoundParent)(),options=React.useMemo(()=>null!=optionsParam?new Map(optionsParam.map((option,index)=>[option.value,{value:option.value,label:option.label,disabled:option.disabled,ref:React.createRef(),id:`${listboxId}_${index}`}])):subitems,[optionsParam,subitems,listboxId]),
ignoreEnterKeyUp=React.useRef(!1),ignoreClick=React.useRef(!1),[listboxFocusRequested,requestListboxFocus]=React.useState(!1),focusListboxIfRequested=React.useCallback(()=>{listboxFocusRequested&&null!=listboxRef.current&&(listboxRef.current.focus(),requestListboxFocus(!1))},[listboxFocusRequested]);var handleListboxRef=(0,_utils.unstable_useForkRef)(listboxRefProp,listboxRef,focusListboxIfRequested);const {getRootProps:getButtonRootProps,active:buttonActive,focusVisible:buttonFocusVisible}=(0,_useButton.default)({disabled,
ref:handleButtonRef});handleButtonRef=React.useMemo(()=>Array.from(options.keys()),[options]);var isItemDisabled=React.useCallback(valueToCheck=>{var _option$disabled;valueToCheck=options.get(valueToCheck);return null!=(_option$disabled=null==valueToCheck?void 0:valueToCheck.disabled)?_option$disabled:!1},[options]);const stringifyOption=React.useCallback(valueToCheck=>(valueToCheck=options.get(valueToCheck))?optionStringifier(valueToCheck):"",[options,optionStringifier]),controlledState=React.useMemo(()=>
({selectedValues:value,open:openProp}),[value,openProp]),getItemId=React.useCallback(itemValue=>{var _options$get;return null==(_options$get=options.get(itemValue))?void 0:_options$get.id},[options]),handleSelectionChange=React.useCallback((event,newValues)=>{if(multiple)null==onChange?void 0:onChange(event,newValues);else{var _newValues$;null==onChange?void 0:onChange(event,null!=(_newValues$=newValues[0])?_newValues$:null)}},[multiple,onChange]),handleHighlightChange=React.useCallback((event,newValue)=>
{null==onHighlightChange?void 0:onHighlightChange(event,null!=newValue?newValue:null)},[onHighlightChange]),handleStateChange=React.useCallback((e,field,fieldValue)=>{if("open"===field&&(null==onOpenChange?void 0:onOpenChange(fieldValue),!1===fieldValue&&"blur"!==(null==e?void 0:e.type))){var _buttonRef$current;null==(_buttonRef$current=buttonRef.current)?void 0:_buttonRef$current.focus()}},[onOpenChange]);handleListboxRef={getInitialState:()=>{var _defaultValue;return{highlightedValue:null,selectedValues:null!=
(_defaultValue=defaultValue)?_defaultValue:[],open:defaultOpen}},getItemId,controlledProps:controlledState,isItemDisabled,listRef:handleListboxRef,onChange:handleSelectionChange,onHighlightChange:handleHighlightChange,onStateChange:handleStateChange,reducerActionContext:React.useMemo(()=>({multiple}),[multiple]),items:handleButtonRef,itemStringifier:stringifyOption,selectionMode:multiple?"multiple":"single",stateReducer:_selectReducer.default};const {dispatch,getRootProps:getListboxRootProps,contextValue:listContextValue,
state:{open,highlightedValue:highlightedOption,selectedValues:selectedOptions}}=(0,_useList.default)(handleListboxRef);React.useEffect(()=>{focusListboxIfRequested()},[focusListboxIfRequested]);React.useEffect(()=>{requestListboxFocus(open)},[open]);const createHandleMouseDown=otherHandlers=>event=>{var _otherHandlers$onMous;null==otherHandlers?void 0:null==(_otherHandlers$onMous=otherHandlers.onMouseDown)?void 0:_otherHandlers$onMous.call(otherHandlers,event);!event.defaultPrevented&&open&&(ignoreClick.current=
!0)},createHandleButtonClick=otherHandlers=>event=>{var _otherHandlers$onClic;null==otherHandlers?void 0:null==(_otherHandlers$onClic=otherHandlers.onClick)?void 0:_otherHandlers$onClic.call(otherHandlers,event);event.defaultPrevented||ignoreClick.current||dispatch({type:_useSelect.SelectActionTypes.buttonClick,event});ignoreClick.current=!1},createHandleButtonKeyDown=otherHandlers=>event=>{var _otherHandlers$onKeyD;null==otherHandlers?void 0:null==(_otherHandlers$onKeyD=otherHandlers.onKeyDown)?
void 0:_otherHandlers$onKeyD.call(otherHandlers,event);event.defaultPrevented||("Enter"===event.key&&(ignoreEnterKeyUp.current=!0),"ArrowDown"!==event.key&&"ArrowUp"!==event.key)||(event.preventDefault(),dispatch({type:_useSelect.SelectActionTypes.buttonArrowKeyDown,key:event.key,event}))},createHandleListboxKeyUp=otherHandlers=>event=>{var _otherHandlers$onKeyU;null==otherHandlers?void 0:null==(_otherHandlers$onKeyU=otherHandlers.onKeyUp)?void 0:_otherHandlers$onKeyU.call(otherHandlers,event);if(!event.defaultPrevented){_otherHandlers$onKeyU=
multiple?["Escape"]:["Escape","Enter"," "];if(open&&!ignoreEnterKeyUp.current&&_otherHandlers$onKeyU.includes(event.key)){var _buttonRef$current2;null==buttonRef?void 0:null==(_buttonRef$current2=buttonRef.current)?void 0:_buttonRef$current2.focus()}ignoreEnterKeyUp.current=!1}};(0,_utils.unstable_useEnhancedEffect)(()=>{if(null!=highlightedOption){var _options$get2,optionRef=null==(_options$get2=options.get(highlightedOption))?void 0:_options$get2.ref;listboxRef.current&&null!=optionRef&&optionRef.current&&
(_options$get2=listboxRef.current.getBoundingClientRect(),optionRef=optionRef.current.getBoundingClientRect(),optionRef.top<_options$get2.top?listboxRef.current.scrollTop-=_options$get2.top-optionRef.top:optionRef.bottom>_options$get2.bottom&&(listboxRef.current.scrollTop+=optionRef.bottom-_options$get2.bottom))}},[highlightedOption,options]);handleListboxRef=React.useCallback(optionValue=>options.get(optionValue),[options]);React.useDebugValue({selectedOptions,highlightedOption,open});isItemDisabled=
React.useMemo(()=>(0,_extends2.default)({},listContextValue,compoundComponentContextValue),[listContextValue,compoundComponentContextValue]);return{buttonActive,buttonFocusVisible,disabled,dispatch,getButtonProps:(otherHandlers={})=>(0,_extends2.default)({},getButtonRootProps((0,_extends2.default)({},otherHandlers,{onClick:createHandleButtonClick(otherHandlers),onMouseDown:createHandleMouseDown(otherHandlers),onKeyDown:createHandleButtonKeyDown(otherHandlers)})),{role:"combobox","aria-expanded":open,
"aria-haspopup":"listbox","aria-controls":listboxId}),getListboxProps:(otherHandlers={})=>(0,_extends2.default)({},getListboxRootProps((0,_extends2.default)({},otherHandlers,{onKeyUp:createHandleListboxKeyUp(otherHandlers)})),{id:listboxId,role:"listbox","aria-multiselectable":multiple?"true":void 0}),getOptionMetadata:handleListboxRef,contextValue:isItemDisabled,open,options:handleButtonRef,value:props.multiple?selectedOptions:0<selectedOptions.length?selectedOptions[0]:null,highlightedOption}}}
//# sourceMappingURL=module$node_modules$$mui$base$node$useSelect$useSelect.js.map
