{"version":3,"sources":["bhlie/rf_city/events.cljs"],"mappings":"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","names":["js/goog.define","bhlie.rf-city.events/GOOG-MAPS-KEY","bhlie.rf-city.events/CITY-KEY","bhlie.rf-city.events/WEATHER-KEY","bhlie.rf-city.events/MOVIE-KEY","re_frame.core.reg_event_fx","p__30461","vec__30462","cljs.core.nth","_","opts","re-frame.core/reg-fx","p__30465","map__30466","cljs.core/--destructure-map","cljs.core.get","canvas","lat","lon","zoom","js/module$node_modules$$googlemaps$js_api_loader$dist$index_umd.Loader","lib","js/google.maps.importLibrary","Map","bhlie.rf_city.events.goog$module$goog$object.get","WebGLOverlayView","BicyclingLayer","bike-layer","bhlie.rf-city.webgl/init-map","cljs.core/clj->js","re_frame.core.inject_cofx","p__30467","p__30468","map__30469","vec__30470","map__30473","location-iq-api-key","db","path","values","fork.re-frame/set-submitting","ajax.core/json-response-format","p__30474","p__30475","map__30476","vec__30477","data","map__30480","display_name","cljs.core/first","cljs.core/assoc-in","fork.re-frame/set-server-message","re_frame.core.reg_event_db","p__30481","vec__30482","vec__30485","error","re-frame.core/reg-cofx","coeffects","cljs.core.assoc","bhlie.rf-city.events/get-current-position","js/Promise","resolve","reject","js/window","re-frame.core/dispatch","p__30488","vec__30489","p__30498","p__30499","map__30500","vec__30501","vec__30504","map-uri","p__30520","p__30521","map__30522","vec__30523","vec__30526","weatherbit-api-key","re_chain.core.reg_chain","p__30535","p__30536","map__30541","vec__30542","vec__30545","p__30559","p__30560","map__30561","vec__30562","p__30584","p__30585","map__30587","vec__30588","moviedb-api-key","query","p__30595","vec__30596","p__30599","vec__30600","p__30603","vec__30604","p__30607","vec__30608","p__30611","p__30612","map__30613","vec__30614","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","l","link-name","li","p1__30617#","cljs.core.filter","cljs.core._EQ_","js/document","G__30618","G__30619","route","cljs.core.apply","reitit.frontend.easy/push-state","p__30620","vec__30621","seq__30622","cljs.core/seq","first__30623","cljs.core/next","p__30624","vec__30625","param","links","seq__30628","chunk__30629","count__30630","i__30631","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","link","e","G__30636","G__30637"],"sourcesContent":["(ns bhlie.rf-city.events\n  (:require [re-frame.core :as re-frame :refer [inject-cofx reg-fx reg-cofx reg-event-fx reg-event-db dispatch]]\n            [reitit.frontend.controllers :as rfc]\n            [reitit.frontend.easy :as rfe :refer [push-state]]\n            [day8.re-frame.http-fx]\n            [re-chain.core :as chain :refer [reg-chain]]\n            [ajax.core :as ajax]\n            [fork.re-frame :as fork]\n            [goog.object :as gobj] \n            [bhlie.rf-city.webgl :refer [init-map]]\n            [shadow.cljs.modern :refer [js-await]]\n            [\"@googlemaps/js-api-loader\" :refer [Loader]]))\n\n(goog-define GOOG-MAPS-KEY \"\")\n(goog-define CITY-KEY \"\")\n(goog-define WEATHER-KEY \"\")\n(goog-define MOVIE-KEY \"\")\n\n(reg-event-fx\n :config/load-google-maps\n (fn [_ [_ opts]]\n   {:google-maps opts}))\n\n(reg-fx\n :google-maps\n (fn [{:keys [canvas lat lon zoom] :as opts}]\n   (js-await [_ (.load (Loader. #js {:apiKey GOOG-MAPS-KEY\n                                     :version \"weekly\"}))]\n             (js-await [lib (js/google.maps.importLibrary \"maps\")]\n                       (let [Map (gobj/get lib \"Map\")\n                             WebGLOverlayView (gobj/get lib \"WebGLOverlayView\")\n                             BicyclingLayer (gobj/get lib \"BicyclingLayer\")\n                             bike-layer (BicyclingLayer.)]\n                         (init-map (Map. canvas (clj->js {:center {:lat lat :lng lon}\n                                                          :zoom zoom})) (WebGLOverlayView.) #js {:tilt 0,\n                                                                                             :heading 0,\n                                                                                             :zoom 18\n                                                                                             :center {:lat lat :lng lon},\n                                                                                             :mapId \"15431d2b469f209e\",\n                                                                                             :disableDefaultUI true,\n                                                                                             :gestureHandling \"none\",\n                                                                                             :keyboardShortcuts false})\n                         (.setMap bike-layer (Map. canvas #js {:center #js {:lat lat\n                                                                            :lng lon}\n                                                               :zoom zoom})))))))\n\n(reg-event-fx\n :app/handle-form-submission\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [location-iq-api-key db]} [_ {:keys [path values]}]]\n   {:db (fork/set-submitting db path true)\n    :http-xhrio {:method :get\n                 :uri \"https://us1.locationiq.com/v1/search.php\"\n                 :timeout 8000\n                 :params {:key location-iq-api-key\n                          :q (get values \"destination\")\n                          :format \"json\"}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-geo-data]\n                 :on-failure [:errors/invalid-geo-data]}}))\n\n(reg-event-fx\n :data/valid-geo-data\n (fn [{:keys [db]} [_ data path]]\n   (let [{:keys [lat lon display_name]} (first data)]\n     {:db (-> db\n              (assoc-in [:data :api :geo] data)\n              (fork/set-submitting path false)\n              (fork/set-server-message path \"Map Lookup succeeded!\"))\n      :fx [[:dispatch [:data/maps [lat lon]]]\n           [:dispatch [:data/weather [lat lon]]]\n           [:dispatch [:data/movies display_name]]]})))\n\n(reg-event-db\n :errors/invalid-geo-data\n (fn [db [_ [error path]]]\n   (-> db\n       (assoc-in [:errors :api :geo] error)\n       (fork/set-submitting path false)\n       (fork/set-server-message path \"Map Lookup failed!\"))))\n\n(reg-cofx\n :config/api-keys\n (fn [coeffects]\n   (assoc coeffects\n          :location-iq-api-key CITY-KEY\n          :weatherbit-api-key WEATHER-KEY\n          :moviedb-api-key MOVIE-KEY\n          :goog-maps-api-key GOOG-MAPS-KEY)))\n\n(reg-event-fx\n :config/geolocation-enabled?\n (fn [_ _]\n   {:current-location nil}))\n\n(defn get-current-position []\n  (js/Promise. (fn [resolve reject] (.. js/window -navigator -geolocation (getCurrentPosition resolve reject)))))\n\n(reg-fx\n :current-location\n (fn [_]\n   (-> (get-current-position)\n       (.then (fn [data] (dispatch [:app/save-current-location (.. data -coords -latitude)\n                                    (.. data -coords -longitude)]))))))\n\n(reg-event-db\n :app/save-current-location\n (fn [db [_ lat lon]]\n   (assoc db :current-loc {:lat lat :lon lon})))\n\n(reg-event-fx\n :data/maps\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [db location-iq-api-key]} [_ [lat lon]]]\n   (let [map-uri (str \"https://maps.locationiq.com/v3/staticmap?key=\" location-iq-api-key\n                      \"&center=\" lat \",\" lon \"&zoom=18\")]\n     {:db (assoc db :map map-uri)})))\n\n(reg-event-fx\n :data/weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"https://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-weather-data]\n                 :on-failure [:errors/invalid-weather-data]}}))\n\n(reg-chain\n :get-weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"http://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-failure [:errors/invalid-weather-data]}})\n (fn [{:keys [db]} [_ data]]\n   {:db (assoc-in db [:data :api :weather] data)}))\n\n(reg-event-fx\n :data/movies\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [moviedb-api-key]} [_ query]]\n   {:http-xhrio {:method :get\n                 :uri \"https://api.themoviedb.org/3/search/movie\"\n                 :timeout 8000\n                 :params {:query query\n                          :api_key moviedb-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-movie-data]\n                 :on-failure [:errors/invalid-movie-data]}}))\n\n(reg-event-db\n :data/valid-movie-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :movies] data)))\n\n(reg-event-db\n :errors/invalid-movie-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :movies] error)))\n\n(reg-event-db\n :data/valid-weather-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :weather] data)))\n\n(reg-event-db\n :errors/invalid-weather-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :weather] error)))\n\n#_(defn get-geolocation-data []\n    {:first-dispatch [:config/geolocation-enabled?]\n     :rules [{:when :seen? :events :config/geolocation-enabled? :dispatch [:app/get-current-location]}]})\n\n(reg-event-fx\n :config/initialize-app\n (fn [_ _]\n   {:db {:current-route nil}\n    :fx [[:dispatch [:config/geolocation-enabled?]]]\n    #_:async-flow #_(get-geolocation-data)}))\n\n(reg-event-fx\n :app/navigated\n (fn [{:keys [db]} [_ new-match]]\n   (let [old-match   (:current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     {:db (assoc db :current-route (assoc new-match :controllers controllers))\n      :active-links old-match})))\n\n(reg-fx\n :active-links\n (fn [l]\n   (let [link-name (-> l :data :link-text)\n         li (filter #(= link-name (.-textContent %))\n                    (.querySelectorAll js/document \"#route-link\"))]\n     (some-> li first .-classList (doto\n                                   (.remove \"bg-pink-200\")\n                                    (.remove \"border-pink-100\")\n                                    (.remove \"rounded-lg\")\n                                    (.remove \"shadow-lg\")\n                                    (.remove \"p-3\"))))))\n\n(reg-fx\n :push-state\n (fn [route]\n   (apply push-state route)))\n\n(reg-event-fx\n :events/push-state\n (fn [_ [_ & route]]\n   {:push-state route}))\n\n(reg-event-db\n :movies/sort-key\n (fn [db [_ param]]\n   (assoc-in db [:sort :movies] param)))\n\n(reg-event-fx\n :app/highlight-active-link\n (fn [_ _]\n   (let [links (.getElementsByTagName js/document \"li\")]\n     {:highlight-active-links links})))\n\n(reg-fx\n :highlight-active-links\n (fn [links]\n   (doseq [link links]\n     (.addEventListener link \"click\"\n                        (fn [e]\n                          (doto (.. e -currentTarget -classList)\n                            (.add \"bg-pink-200\")\n                            (.add \"border-pink-100\")\n                            (.add \"rounded-lg\")\n                            (.add \"shadow-lg\")\n                            (.add \"p-3\")))))))\n"]}