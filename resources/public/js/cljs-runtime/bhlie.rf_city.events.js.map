{"version":3,"sources":["bhlie/rf_city/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__32864","vec__32865","cljs.core.nth","_","opts","re-frame.core/reg-fx","p__32868","map__32869","cljs.core/--destructure-map","cljs.core.get","canvas","lat","lon","zoom","lib","js/google.maps.importLibrary","Map","bhlie.rf_city.events.goog$module$goog$object.get","BicyclingLayer","bike-layer","p__32870","p__32871","map__32872","vec__32873","db","map","cljs.core.assoc","re_frame.core.inject_cofx","p__32876","p__32877","map__32878","vec__32879","map__32882","location-iq-api-key","path","values","fork.re-frame/set-submitting","ajax.core/json-response-format","p__32883","p__32884","map__32885","vec__32886","data","map__32889","display_name","cljs.core/first","cljs.core/assoc-in","fork.re-frame/set-server-message","re_frame.core.reg_event_db","p__32890","vec__32891","vec__32894","error","re-frame.core/reg-cofx","coeffects","js/CLOSURE_DEFINES","bhlie.rf-city.events/get-current-position","js/Promise","resolve","reject","js/window","re-frame.core/dispatch","p__32897","vec__32898","p__32901","p__32902","map__32903","vec__32904","vec__32907","map-uri","p__32910","p__32911","map__32912","vec__32913","vec__32916","weatherbit-api-key","re_chain.core.reg_chain","p__32919","p__32920","map__32921","vec__32922","vec__32925","p__32928","p__32929","map__32930","vec__32931","p__32934","p__32935","map__32936","vec__32937","moviedb-api-key","query","p__32940","vec__32941","p__32944","vec__32945","p__32948","vec__32949","p__32952","vec__32953","p__32956","p__32957","map__32958","vec__32959","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","l","link-name","li","p1__32962#","cljs.core.filter","cljs.core._EQ_","js/document","G__32963","G__32964","route","cljs.core.apply","reitit.frontend.easy/push-state","p__32965","vec__32966","seq__32967","cljs.core/seq","first__32968","cljs.core/next","p__32969","vec__32970","param","links","seq__32973","chunk__32974","count__32975","i__32976","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","link","e","G__32979","G__32980"],"sourcesContent":["(ns bhlie.rf-city.events\n  (:require [re-frame.core :as re-frame :refer [inject-cofx reg-fx reg-cofx reg-event-fx reg-event-db dispatch]]\n            [reitit.frontend.controllers :as rfc]\n            [reitit.frontend.easy :as rfe :refer [push-state]]\n            [day8.re-frame.http-fx]\n            [re-chain.core :as chain :refer [reg-chain]]\n            [ajax.core :as ajax]\n            [fork.re-frame :as fork]\n            [goog.object :as gobj]\n            [goog.dom :as gdom]\n            [shadow.cljs.modern :refer [js-await]]))\n\n(reg-event-fx\n :config/load-google-maps\n (fn [_ [_ opts]]\n   {:google-maps opts}))\n\n(reg-fx\n :google-maps\n (fn [{:keys [canvas lat lon zoom]}]\n   (js-await [lib (js/google.maps.importLibrary \"maps\")]\n             (let [Map (gobj/get lib \"Map\")\n                   BicyclingLayer (gobj/get lib \"BicyclingLayer\")\n                   bike-layer (BicyclingLayer.)]\n               (.setMap bike-layer (Map. canvas #js {:center #js {:lat lat\n                                               :lng lon}\n                                  :zoom zoom}))))))\n\n(reg-event-fx\n :app/show-google-map\n (fn [{:keys [db]} [_ map]]\n   {:db (assoc db :goog-map map)}))\n\n(reg-event-fx\n :app/handle-form-submission\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [location-iq-api-key db]} [_ {:keys [path values]}]]\n   {:db (fork/set-submitting db path true)\n    :http-xhrio {:method :get\n                 :uri \"https://us1.locationiq.com/v1/search.php\"\n                 :timeout 8000\n                 :params {:key location-iq-api-key\n                          :q (get values \"destination\")\n                          :format \"json\"}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-geo-data]\n                 :on-failure [:errors/invalid-geo-data]}}))\n\n(reg-event-fx\n :data/valid-geo-data\n (fn [{:keys [db]} [_ data path]]\n   (let [{:keys [lat lon display_name]} (first data)]\n     {:db (-> db\n              (assoc-in [:data :api :geo] data)\n              (fork/set-submitting path false)\n              (fork/set-server-message path \"Map Lookup succeeded!\"))\n      :fx [[:dispatch [:data/maps [lat lon]]]\n           [:dispatch [:data/weather [lat lon]]]\n           [:dispatch [:data/movies display_name]]]})))\n\n(reg-event-db\n :errors/invalid-geo-data\n (fn [db [_ [error path]]]\n   (-> db\n       (assoc-in [:errors :api :geo] error)\n       (fork/set-submitting path false)\n       (fork/set-server-message path \"Map Lookup failed!\"))))\n\n(reg-cofx\n :config/api-keys\n (fn [coeffects]\n   (assoc coeffects\n          :location-iq-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.city_key\")\n          :weatherbit-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.weather_key\")\n          :moviedb-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.movie_key\")\n          :goog-maps-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.goog_maps_key\"))))\n\n(reg-event-fx\n :config/geolocation-enabled?\n (fn [_ _]\n   {:current-location nil}))\n\n(defn get-current-position []\n  (js/Promise. (fn [resolve reject] (.. js/window -navigator -geolocation (getCurrentPosition resolve reject)))))\n\n(reg-fx\n :current-location\n (fn [_]\n   (-> (get-current-position)\n       (.then (fn [data] (dispatch [:app/save-current-location (.. data -coords -latitude)\n                                    (.. data -coords -longitude)]))))))\n\n(reg-event-db\n :app/save-current-location\n (fn [db [_ lat lon]]\n   (assoc db :current-loc {:lat lat :lon lon})))\n\n(reg-event-fx\n :data/maps\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [db location-iq-api-key]} [_ [lat lon]]]\n   (let [map-uri (str \"https://maps.locationiq.com/v3/staticmap?key=\" location-iq-api-key\n                      \"&center=\" lat \",\" lon \"&zoom=18\")]\n     {:db (assoc db :map map-uri)})))\n\n(reg-event-fx\n :data/weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"http://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-weather-data]\n                 :on-failure [:errors/invalid-weather-data]}}))\n\n(reg-chain\n :get-weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"http://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-failure [:errors/invalid-weather-data]}})\n (fn [{:keys [db]} [_ data]]\n   {:db (assoc-in db [:data :api :weather] data)}))\n\n(reg-event-fx\n :data/movies\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [moviedb-api-key]} [_ query]]\n   {:http-xhrio {:method :get\n                 :uri \"https://api.themoviedb.org/3/search/movie\"\n                 :timeout 8000\n                 :params {:query query\n                          :api_key moviedb-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-movie-data]\n                 :on-failure [:errors/invalid-movie-data]}}))\n\n(reg-event-db\n :data/valid-movie-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :movies] data)))\n\n(reg-event-db\n :errors/invalid-movie-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :movies] error)))\n\n(reg-event-db\n :data/valid-weather-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :weather] data)))\n\n(reg-event-db\n :errors/invalid-weather-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :weather] error)))\n\n#_(defn get-geolocation-data []\n    {:first-dispatch [:config/geolocation-enabled?]\n     :rules [{:when :seen? :events :config/geolocation-enabled? :dispatch [:app/get-current-location]}]})\n\n(reg-event-fx\n :config/initialize-app\n (fn [_ _]\n   {:db {:current-route nil}\n    :fx [[:dispatch [:config/geolocation-enabled?]]]\n    #_:async-flow #_(get-geolocation-data)}))\n\n(reg-event-fx\n :app/navigated\n (fn [{:keys [db]} [_ new-match]]\n   (let [old-match   (:current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     {:db (assoc db :current-route (assoc new-match :controllers controllers))\n      :active-links old-match})))\n\n(reg-fx\n :active-links\n (fn [l]\n   (let [link-name (-> l :data :link-text)\n         li (filter #(= link-name (.-textContent %))\n                    (.querySelectorAll js/document \"#route-link\"))]\n     (some-> li first .-classList (doto\n                                   (.remove \"bg-pink-200\")\n                                    (.remove \"border-pink-100\")\n                                    (.remove \"rounded-lg\")\n                                    (.remove \"shadow-lg\")\n                                    (.remove \"p-3\"))))))\n\n(reg-fx\n :push-state\n (fn [route]\n   (apply push-state route)))\n\n(reg-event-fx\n :events/push-state\n (fn [_ [_ & route]]\n   {:push-state route}))\n\n(reg-event-db\n :movies/sort-key\n (fn [db [_ param]]\n   (assoc-in db [:sort :movies] param)))\n\n(reg-event-fx\n :app/highlight-active-link\n (fn [_ _]\n   (let [links (.getElementsByTagName js/document \"li\")]\n     {:highlight-active-links links})))\n\n(reg-fx\n :highlight-active-links\n (fn [links]\n   (doseq [link links]\n     (.addEventListener link \"click\"\n                        (fn [e]\n                          (doto (.. e -currentTarget -classList)\n                            (.add \"bg-pink-200\")\n                            (.add \"border-pink-100\")\n                            (.add \"rounded-lg\")\n                            (.add \"shadow-lg\")\n                            (.add \"p-3\")))))))\n"]}