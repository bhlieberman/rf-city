{"version":3,"sources":["bhlie/rf_city/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__41457","vec__41458","cljs.core.nth","_","opts","re-frame.core/reg-fx","p__41461","map__41462","cljs.core/--destructure-map","cljs.core.get","canvas","lat","lon","zoom","js/module$node_modules$$googlemaps$js_api_loader$dist$index_umd.Loader","bhlie.rf_city.events.goog$module$goog$object.get","js/CLOSURE_DEFINES","lib","js/google.maps.importLibrary","Map","WebGLOverlayView","BicyclingLayer","bike-layer","bhlie.rf-city.webgl/init-map","cljs.core/clj->js","re_frame.core.inject_cofx","p__41463","p__41464","map__41465","vec__41466","map__41469","location-iq-api-key","db","path","values","fork.re-frame/set-submitting","ajax.core/json-response-format","p__41470","p__41471","map__41472","vec__41473","data","map__41476","display_name","cljs.core/first","cljs.core/assoc-in","fork.re-frame/set-server-message","re_frame.core.reg_event_db","p__41477","vec__41478","vec__41481","error","re-frame.core/reg-cofx","coeffects","cljs.core.assoc","bhlie.rf-city.events/get-current-position","js/Promise","resolve","reject","js/window","re-frame.core/dispatch","p__41484","vec__41485","p__41488","p__41489","map__41490","vec__41491","vec__41494","map-uri","p__41497","p__41498","map__41499","vec__41500","vec__41503","weatherbit-api-key","re_chain.core.reg_chain","p__41506","p__41507","map__41508","vec__41509","vec__41512","p__41515","p__41516","map__41517","vec__41518","p__41521","p__41522","map__41523","vec__41524","moviedb-api-key","query","p__41527","vec__41528","p__41531","vec__41532","p__41535","vec__41536","p__41539","vec__41540","p__41543","p__41544","map__41545","vec__41546","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","l","link-name","li","p1__41549#","cljs.core.filter","cljs.core._EQ_","js/document","G__41550","G__41551","route","cljs.core.apply","reitit.frontend.easy/push-state","p__41552","vec__41553","seq__41554","cljs.core/seq","first__41555","cljs.core/next","p__41556","vec__41557","param","links","seq__41560","chunk__41561","count__41562","i__41563","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","link","e","G__41566","G__41567"],"sourcesContent":["(ns bhlie.rf-city.events\n  (:require [re-frame.core :as re-frame :refer [inject-cofx reg-fx reg-cofx reg-event-fx reg-event-db dispatch]]\n            [reitit.frontend.controllers :as rfc]\n            [reitit.frontend.easy :as rfe :refer [push-state]]\n            [day8.re-frame.http-fx]\n            [re-chain.core :as chain :refer [reg-chain]]\n            [ajax.core :as ajax]\n            [fork.re-frame :as fork]\n            [goog.object :as gobj]\n            [goog.dom :as gdom]\n            [bhlie.rf-city.webgl :refer [init-map]]\n            [shadow.cljs.modern :refer [js-await]]\n            [\"@googlemaps/js-api-loader\" :refer [Loader]]))\n\n(reg-event-fx\n :config/load-google-maps\n (fn [_ [_ opts]]\n   {:google-maps opts}))\n\n(reg-fx\n :google-maps\n (fn [{:keys [canvas lat lon zoom] :as opts}]\n   (js-await [_ (.load (Loader. #js {:apiKey (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.goog_maps_key\")\n                                     :version \"weekly\"}))]\n             (js-await [lib (js/google.maps.importLibrary \"maps\")]\n                       (let [Map (gobj/get lib \"Map\")\n                             WebGLOverlayView (gobj/get lib \"WebGLOverlayView\")\n                             BicyclingLayer (gobj/get lib \"BicyclingLayer\")\n                             bike-layer (BicyclingLayer.)]\n                         (init-map (Map. canvas (clj->js {:center {:lat lat :lng lon}\n                                                          :zoom zoom})) (WebGLOverlayView.) #js {:tilt 0,\n                                                                                             :heading 0,\n                                                                                             :zoom 18\n                                                                                             :center {:lat lat :lng lon},\n                                                                                             :mapId \"15431d2b469f209e\",\n                                                                                             :disableDefaultUI true,\n                                                                                             :gestureHandling \"none\",\n                                                                                             :keyboardShortcuts false})\n                         (.setMap bike-layer (Map. canvas #js {:center #js {:lat lat\n                                                                            :lng lon}\n                                                               :zoom zoom})))))))\n\n(reg-event-fx\n :app/handle-form-submission\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [location-iq-api-key db]} [_ {:keys [path values]}]]\n   {:db (fork/set-submitting db path true)\n    :http-xhrio {:method :get\n                 :uri \"https://us1.locationiq.com/v1/search.php\"\n                 :timeout 8000\n                 :params {:key location-iq-api-key\n                          :q (get values \"destination\")\n                          :format \"json\"}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-geo-data]\n                 :on-failure [:errors/invalid-geo-data]}}))\n\n(reg-event-fx\n :data/valid-geo-data\n (fn [{:keys [db]} [_ data path]]\n   (let [{:keys [lat lon display_name]} (first data)]\n     {:db (-> db\n              (assoc-in [:data :api :geo] data)\n              (fork/set-submitting path false)\n              (fork/set-server-message path \"Map Lookup succeeded!\"))\n      :fx [[:dispatch [:data/maps [lat lon]]]\n           [:dispatch [:data/weather [lat lon]]]\n           [:dispatch [:data/movies display_name]]]})))\n\n(reg-event-db\n :errors/invalid-geo-data\n (fn [db [_ [error path]]]\n   (-> db\n       (assoc-in [:errors :api :geo] error)\n       (fork/set-submitting path false)\n       (fork/set-server-message path \"Map Lookup failed!\"))))\n\n(reg-cofx\n :config/api-keys\n (fn [coeffects]\n   (assoc coeffects\n          :location-iq-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.city_key\")\n          :weatherbit-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.weather_key\")\n          :moviedb-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.movie_key\")\n          :goog-maps-api-key (gobj/get js/CLOSURE_DEFINES \"bhlie.rf_city.goog_maps_key\"))))\n\n(reg-event-fx\n :config/geolocation-enabled?\n (fn [_ _]\n   {:current-location nil}))\n\n(defn get-current-position []\n  (js/Promise. (fn [resolve reject] (.. js/window -navigator -geolocation (getCurrentPosition resolve reject)))))\n\n(reg-fx\n :current-location\n (fn [_]\n   (-> (get-current-position)\n       (.then (fn [data] (dispatch [:app/save-current-location (.. data -coords -latitude)\n                                    (.. data -coords -longitude)]))))))\n\n(reg-event-db\n :app/save-current-location\n (fn [db [_ lat lon]]\n   (assoc db :current-loc {:lat lat :lon lon})))\n\n(reg-event-fx\n :data/maps\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [db location-iq-api-key]} [_ [lat lon]]]\n   (let [map-uri (str \"https://maps.locationiq.com/v3/staticmap?key=\" location-iq-api-key\n                      \"&center=\" lat \",\" lon \"&zoom=18\")]\n     {:db (assoc db :map map-uri)})))\n\n(reg-event-fx\n :data/weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"https://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-weather-data]\n                 :on-failure [:errors/invalid-weather-data]}}))\n\n(reg-chain\n :get-weather\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [weatherbit-api-key]} [_ [lat lon]]]\n   {:http-xhrio {:method :get\n                 :uri \"http://api.weatherbit.io/v2.0/forecast/daily\"\n                 :timeout 8000\n                 :params {:lat lat\n                          :lon lon\n                          :key weatherbit-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-failure [:errors/invalid-weather-data]}})\n (fn [{:keys [db]} [_ data]]\n   {:db (assoc-in db [:data :api :weather] data)}))\n\n(reg-event-fx\n :data/movies\n [(inject-cofx :config/api-keys)]\n (fn [{:keys [moviedb-api-key]} [_ query]]\n   {:http-xhrio {:method :get\n                 :uri \"https://api.themoviedb.org/3/search/movie\"\n                 :timeout 8000\n                 :params {:query query\n                          :api_key moviedb-api-key}\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success [:data/valid-movie-data]\n                 :on-failure [:errors/invalid-movie-data]}}))\n\n(reg-event-db\n :data/valid-movie-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :movies] data)))\n\n(reg-event-db\n :errors/invalid-movie-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :movies] error)))\n\n(reg-event-db\n :data/valid-weather-data\n (fn [db [_ data]]\n   (assoc-in db [:data :api :weather] data)))\n\n(reg-event-db\n :errors/invalid-weather-data\n (fn [db [_ error]]\n   (assoc-in db [:errors :api :weather] error)))\n\n#_(defn get-geolocation-data []\n    {:first-dispatch [:config/geolocation-enabled?]\n     :rules [{:when :seen? :events :config/geolocation-enabled? :dispatch [:app/get-current-location]}]})\n\n(reg-event-fx\n :config/initialize-app\n (fn [_ _]\n   {:db {:current-route nil}\n    :fx [[:dispatch [:config/geolocation-enabled?]]]\n    #_:async-flow #_(get-geolocation-data)}))\n\n(reg-event-fx\n :app/navigated\n (fn [{:keys [db]} [_ new-match]]\n   (let [old-match   (:current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     {:db (assoc db :current-route (assoc new-match :controllers controllers))\n      :active-links old-match})))\n\n(reg-fx\n :active-links\n (fn [l]\n   (let [link-name (-> l :data :link-text)\n         li (filter #(= link-name (.-textContent %))\n                    (.querySelectorAll js/document \"#route-link\"))]\n     (some-> li first .-classList (doto\n                                   (.remove \"bg-pink-200\")\n                                    (.remove \"border-pink-100\")\n                                    (.remove \"rounded-lg\")\n                                    (.remove \"shadow-lg\")\n                                    (.remove \"p-3\"))))))\n\n(reg-fx\n :push-state\n (fn [route]\n   (apply push-state route)))\n\n(reg-event-fx\n :events/push-state\n (fn [_ [_ & route]]\n   {:push-state route}))\n\n(reg-event-db\n :movies/sort-key\n (fn [db [_ param]]\n   (assoc-in db [:sort :movies] param)))\n\n(reg-event-fx\n :app/highlight-active-link\n (fn [_ _]\n   (let [links (.getElementsByTagName js/document \"li\")]\n     {:highlight-active-links links})))\n\n(reg-fx\n :highlight-active-links\n (fn [links]\n   (doseq [link links]\n     (.addEventListener link \"click\"\n                        (fn [e]\n                          (doto (.. e -currentTarget -classList)\n                            (.add \"bg-pink-200\")\n                            (.add \"border-pink-100\")\n                            (.add \"rounded-lg\")\n                            (.add \"shadow-lg\")\n                            (.add \"p-3\")))))))\n"]}