shadow$provide.module$node_modules$$mui$x_date_pickers$node$internals$utils$date_utils=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.replaceInvalidDateByNull=exports.findClosestEnabledDate=exports.clamp=exports.areDatesEqual=exports.applyDefaultDate=void 0;exports.findClosestEnabledDate=({date,disableFuture,disablePast,maxDate,minDate,isDateDisabled,utils})=>{const today=utils.startOfDay(utils.date());disablePast&&utils.isBefore(minDate,today)&&
(minDate=today);disableFuture&&utils.isAfter(maxDate,today)&&(maxDate=today);disablePast=disableFuture=date;utils.isBefore(date,minDate)&&(disableFuture=minDate,disablePast=null);utils.isAfter(date,maxDate)&&(disablePast&&(disablePast=maxDate),disableFuture=null);for(;disableFuture||disablePast;){disableFuture&&utils.isAfter(disableFuture,maxDate)&&(disableFuture=null);disablePast&&utils.isBefore(disablePast,minDate)&&(disablePast=null);if(disableFuture){if(!isDateDisabled(disableFuture))return disableFuture;
disableFuture=utils.addDays(disableFuture,1)}if(disablePast){if(!isDateDisabled(disablePast))return disablePast;disablePast=utils.addDays(disablePast,-1)}}return null};exports.clamp=(utils,value,minDate,maxDate)=>utils.isBefore(value,minDate)?minDate:utils.isAfter(value,maxDate)?maxDate:value;exports.replaceInvalidDateByNull=(utils,value)=>null!=value&&utils.isValid(value)?value:null;exports.applyDefaultDate=(utils,value,defaultValue)=>null!=value&&utils.isValid(value)?value:defaultValue;exports.areDatesEqual=
(utils,a,b)=>utils.isValid(a)||null==a||utils.isValid(b)||null==b?utils.isEqual(a,b):!0}
//# sourceMappingURL=module$node_modules$$mui$x_date_pickers$node$internals$utils$date_utils.js.map
